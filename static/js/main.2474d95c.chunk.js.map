{"version":3,"sources":["SelectAndCopyField.tsx","URLList.tsx","App.tsx","serviceWorker.ts","index.tsx","FinalFormControl.tsx","util.ts","pb/main.ts","pb/google/protobuf/empty.ts","api.ts","FormCheck.tsx","ExtraFormOptions.tsx","Form.tsx","FormSelect.tsx","SpinButton.tsx","google/protobuf/empty.ts"],"names":["value","displayValue","passthrough","useState","isLoading","setLoading","inputRef","useRef","showInput","undefined","InputGroup","className","FormControl","onClick","current","select","ref","style","display","readOnly","Append","e","document","execCommand","target","focus","setTimeout","CopyButton","Button","variant","VideoPreview","url","src","width","height","quality","res","exec","length","urls","video","Alert","href","map","Col","key","md","Group","SelectAndCopyField","Label","rel","setURLs","Container","Form","URLList","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","input","meta","children","extraProps","submitError","showError","invalid","dirtySinceLastSubmit","touched","active","Control","isInvalid","Feedback","type","ifLocal","def","withCookiePersistence","persistedValues","form","subscribe","values","Cookie","set","JSON","stringify","reduce","acc","k","maxAge","baseTranscodeReq","baseTranscodeReq_Transcode","baseTranscodeReq_Handshake","baseTranscodeResp","baseTranscodeResp_JobStatus","baseResult","baseToken","TranscodeReq","encode","writer","Writer","create","req","$case","TranscodeReq_Handshake","handshake","uint32","fork","ldelim","TranscodeReq_Transcode","transcode","Empty","status","cancel","decode","reader","Uint8Array","Reader","end","len","pos","tag","skipType","fromJSON","object","fromPartial","toJSON","obj","string","String","token","Token","TranscodeResp","resp","Result","accepted","TranscodeResp_JobStatus","jobStatus","state","unknown","noJobs","queued","processing","uploading","completed","cancelled","resultInner","ok","err","bytes","v1","bytesFromBase64","arr","bin","i","byteLength","push","fromCharCode","btoa","join","base64FromBytes","windowBase64","globalThis","atob","b64","Buffer","from","toString","charCodeAt","baseEmpty","_","getVRedditFromUser","statusCb","Promise","resolve","reject","test","fetch","r","text","Error","getVRedditFromComments","connection","openConnection","addr","isOpened","VRWebSocket","timeout","clearTimeout","log","dir","close","open","getHostedURL","targetURL","opts","statusCallback","authz","server","authed","sendRequest","NewRequest","proto","accept","wsStartDownload","rawResolve","rawReject","gotStatus","done","s","onMessage","addListener","listen","data","removeListener","parseResponse","stateTy","inner","send","statusFn","scrapeRedditURLs","id","vredditID","qualities","mp4Urls","name","vid","createElement","loadVideos","valid","rem","once","fail","remove","clearVideo","types","_e","newURLs","resolveOnFirst","Object","keys","t","removeEventListener","addEventListener","arrayBuffer","onClose","onError","onResponse","isAuthed","this","WebSocketAsPromised","v","_code","_reason","finish","ret","addOnceListener","isOpening","remInput","Check","checked","YoutubeDLOptions","as","lg","component","FinalFormControl","label","required","placeholder","initialValue","util","ScrapeOptions","FormCheck","onSubmit","conversionMethod","options","_reject","promise","correctProto","protocol","resolvedURL","serverURL","URL","api","FORM_ERROR","URLForm","handleSubmit","submitting","pristine","submitErrors","formError","disabledFromUserError","sm","FormSelect","HelpText","loading","loadingMessage","disabled","validate","errors","decorators","withCookies","cookies","setStatus","defaults","get","initialValues","props","Text","spinnerProps","buttonProps","size","animation","role","aria-hidden"],"mappings":"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","file":"static/js/main.2474d95c.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\n\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport {\n  GoClippy,\n  GoCheck,\n} from 'react-icons/go';\n\nexport default ({ value, displayValue, ...passthrough }: { value: string; displayValue?: boolean }) => {\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const showInput = displayValue === undefined || displayValue;\n\n  const onClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (!inputRef?.current) {\n      return;\n    }\n\n    setLoading(true);\n    // hack around the browser needing to see it.\n    if (!showInput) {\n      inputRef.current.style.display = 'block';\n    }\n    inputRef.current.select();\n    document.execCommand('copy');\n    if (!showInput) {\n      inputRef.current.style.display = 'none';\n    }\n\n    (e.target as any).focus();\n\n    setTimeout(() => setLoading(false), 1000);\n  };\n\n  return (\n    <>\n      <InputGroup className=\"copy-group\">\n        <FormControl\n          className=\"copy-only\"\n          onClick={() => inputRef.current?.select()}\n          value={value}\n          ref={inputRef}\n          style={showInput ? {} : {\n            display: 'none',\n          }}\n          readOnly\n          {...passthrough}\n        />\n        <InputGroup.Append>\n          <CopyButton isLoading={isLoading} onClick={onClick} />\n        </InputGroup.Append>\n      </InputGroup>\n    </>\n  );\n};\n\ntype clk = (v: React.MouseEvent<HTMLButtonElement>) => void;\n\nconst CopyButton = ({ isLoading, onClick }: { isLoading: boolean; onClick: clk }) => (\n  <Button\n    onClick={onClick}\n    variant=\"outline-success\"\n  >\n    {isLoading ? (<GoCheck />) : (<GoClippy />)}\n  </Button>\n);\n","import React from 'react';\n\nimport Alert from 'react-bootstrap/Alert';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\n\nimport SelectAndCopyField from './SelectAndCopyField';\n\nconst VideoPreview = ({ url }: { url: string }) => (\n  <video\n    src={url}\n    width=\"240\"\n    height=\"auto\"\n  />\n);\n\nconst quality = (url: string): string => {\n  const res = /DASH_([0-9]+)\\.?([a-z0-9]{1,5})?/.exec(url);\n\n  if (res === null) {\n    return '';\n  }\n\n  if (res?.length > 3) {\n    return `${res[1]}p ${res[2]} video`;\n  } else if (res?.length > 1) {\n    return `${res[1]}p video`;\n  } else {\n    return '';\n  }\n};\n\nexport default ({ urls, video }: { urls: string[], video?: boolean }) => {\n  if (urls.length === 0) {\n    return (\n      <div className=\"mt-3\">\n        <Alert variant=\"danger\">\n          Couldn't get a video from the link provided. If it's definitely a v.redd.it video,\n          please send <a href=\"mailto:me@brod.es\">me@brod.es</a> an email with the link.\n        </Alert>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      { video && <VideoPreview url={urls[0]} /> }\n      <div className=\"mt-3\" />\n      {\n        urls.map((url: string) => (\n          <Col key={url} md=\"8\">\n            <Form.Group>\n              <SelectAndCopyField\n                value={url}\n                displayValue\n              />\n              <Form.Label>\n                {\n                  quality(url)\n                    ? (\n                      <>\n                        {quality(url)}\n                        &nbsp;\n                        (\n                          <a\n                            href={url}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            preview\n                          </a>\n                        )\n                      </>\n                    )\n                    : (\n                      <a\n                        href={url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        preview\n                      </a>\n                    )\n                }\n              </Form.Label>\n            </Form.Group>\n          </Col>\n        ))\n      }\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport Container from 'react-bootstrap/Container';\n\nimport './App.scss';\n\nimport Form from './Form';\nimport URLList from './URLList';\n\nexport default () => {\n  const [urls, setURLs] = useState<string[] | null>(null);\n\n  return (\n    <Container className=\"app\">\n      <h2 className=\"app-header pt-md-5 mb-3\">\n        v.redd.it converter\n      </h2>\n      <Form\n        setURLs={setURLs}\n      />\n      <div className=\"mt-5\">\n        {\n          urls !== null && (\n            <URLList urls={urls} video />\n          )\n        }\n      </div>\n    </Container>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { FieldRenderProps } from 'react-final-form';\n\nexport default ({\n  input,\n  meta,\n  children,\n  ...extraProps\n}: FieldRenderProps<string>) => {\n  const error = meta.error || meta.submitError;\n  const showError = meta.invalid && !meta.dirtySinceLastSubmit && meta.touched && !meta.active;\n  return (\n    <>\n      <Form.Control\n        isInvalid={showError}\n        {...input}\n        {...extraProps}\n      >\n        { children }\n      </Form.Control>\n      {\n        showError && (\n          <Form.Control.Feedback type=\"invalid\">\n            { error }\n          </Form.Control.Feedback>\n        )\n      }\n    </>\n  );\n};\n","import { Decorator, FormApi } from 'final-form';\nimport Cookie from 'universal-cookie';\n\n\n// localDefault returns def locally otherwise undefined.\nexport const ifLocal = <T>(def: T): T | undefined => (\n  process.env.NODE_ENV === 'development' ? def : undefined\n);\n\n// localDefault returns def locally otherwise undefined.\nexport const localOrDefault = <T>(local: T, not: T): T => (\n  process.env.NODE_ENV === 'development' ? local : not\n);\n\nexport const withCookiePersistence = <FormValues>(persistedValues: (keyof FormValues)[]): Decorator<FormValues> => (form: FormApi<FormValues>) => form.subscribe(\n  ({ values }: { values?: FormValues }) => {\n    if (values === undefined) {\n      return;\n    }\n\n    new Cookie('persist').set('persist', JSON.stringify(\n      persistedValues.reduce((acc, k) => ({ ...acc, [k]: values[k] }), {})\n    ), { maxAge: 100 * 365 * 24 * 60 * 60 });\n  },\n  { values: true },\n);\n\n","/* eslint-disable */\nimport { Empty } from './google/protobuf/empty';\nimport { Writer, Reader } from 'protobufjs/minimal';\n\n\n/**\n *  state machine:\n *\n *  req Handshake -> resp Accepted -> req TrancodeURL\n *\n *  req Transcode -> resp JobStateResp -> req Status\n *\n *  req Status -> resp JobStateResp -> req Status\n *\n *  req Status -> resp JobStateResp -> req Cancel\n *\n *  req Status -> resp JobStateResp.Complete -> req TranscodeURL\n *\n *  req Cancel -> resp Cancelled -> req TranscodeURL\n *\n *  req _ -> resp Invalid\n */\nexport interface TranscodeReq {\n  req?: { $case: 'handshake', handshake: TranscodeReq_Handshake } | { $case: 'transcode', transcode: TranscodeReq_Transcode } | { $case: 'status', status: Empty } | { $case: 'cancel', cancel: Empty };\n}\n\nexport interface TranscodeReq_Transcode {\n  url: string;\n}\n\nexport interface TranscodeReq_Handshake {\n  token: Token | undefined;\n}\n\nexport interface TranscodeResp {\n  /**\n   * error\n   *  generic error from encoding or the server; assume that the stream is over.\n   *\n   * accepted\n   *  accepted is returned after a handshake. if it is not ok, the handshake failed.\n   *\n   * jobStatus\n   *  job_status is returned from calling status or transcode_url.\n   */\n  resp?: { $case: 'error', error: string } | { $case: 'accepted', accepted: Result } | { $case: 'jobStatus', jobStatus: TranscodeResp_JobStatus };\n}\n\nexport interface TranscodeResp_JobStatus {\n  state?: { $case: 'unknown', unknown: Empty } | { $case: 'noJobs', noJobs: Empty } | { $case: 'queued', queued: Empty } | { $case: 'processing', processing: Empty } | { $case: 'uploading', uploading: Empty } | { $case: 'completed', completed: Result } | { $case: 'cancelled', cancelled: Empty };\n}\n\nexport interface Result {\n  resultInner?: { $case: 'ok', ok: string } | { $case: 'err', err: string };\n}\n\nexport interface Token {\n  /**\n   * v1\n   *  V1 is a shared random secret known by the end user.\n   *  It's presented as base64 and decoded into bytes before transmission as a Token.\n   */\n  token?: { $case: 'v1', v1: Uint8Array };\n}\n\nconst baseTranscodeReq: object = {\n};\n\nconst baseTranscodeReq_Transcode: object = {\n  url: \"\",\n};\n\nconst baseTranscodeReq_Handshake: object = {\n};\n\nconst baseTranscodeResp: object = {\n};\n\nconst baseTranscodeResp_JobStatus: object = {\n};\n\nconst baseResult: object = {\n};\n\nconst baseToken: object = {\n};\n\nexport const protobufPackage = 'main'\n\nexport const TranscodeReq = {\n  encode(message: TranscodeReq, writer: Writer = Writer.create()): Writer {\n    if (message.req?.$case === 'handshake') {\n      TranscodeReq_Handshake.encode(message.req.handshake, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.req?.$case === 'transcode') {\n      TranscodeReq_Transcode.encode(message.req.transcode, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.req?.$case === 'status') {\n      Empty.encode(message.req.status, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.req?.$case === 'cancel') {\n      Empty.encode(message.req.cancel, writer.uint32(34).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input: Uint8Array | Reader, length?: number): TranscodeReq {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseTranscodeReq } as TranscodeReq;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.req = {$case: 'handshake', handshake: TranscodeReq_Handshake.decode(reader, reader.uint32())};\n          break;\n        case 2:\n          message.req = {$case: 'transcode', transcode: TranscodeReq_Transcode.decode(reader, reader.uint32())};\n          break;\n        case 3:\n          message.req = {$case: 'status', status: Empty.decode(reader, reader.uint32())};\n          break;\n        case 4:\n          message.req = {$case: 'cancel', cancel: Empty.decode(reader, reader.uint32())};\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object: any): TranscodeReq {\n    const message = { ...baseTranscodeReq } as TranscodeReq;\n    if (object.handshake !== undefined && object.handshake !== null) {\n      message.req = {$case: 'handshake', handshake: TranscodeReq_Handshake.fromJSON(object.handshake)};\n    }\n    if (object.transcode !== undefined && object.transcode !== null) {\n      message.req = {$case: 'transcode', transcode: TranscodeReq_Transcode.fromJSON(object.transcode)};\n    }\n    if (object.status !== undefined && object.status !== null) {\n      message.req = {$case: 'status', status: Empty.fromJSON(object.status)};\n    }\n    if (object.cancel !== undefined && object.cancel !== null) {\n      message.req = {$case: 'cancel', cancel: Empty.fromJSON(object.cancel)};\n    }\n    return message;\n  },\n  fromPartial(object: DeepPartial<TranscodeReq>): TranscodeReq {\n    const message = { ...baseTranscodeReq } as TranscodeReq;\n    if (object.req?.$case === 'handshake' && object.req?.handshake !== undefined && object.req?.handshake !== null) {\n      message.req = {$case: 'handshake', handshake: TranscodeReq_Handshake.fromPartial(object.req.handshake)};\n    }\n    if (object.req?.$case === 'transcode' && object.req?.transcode !== undefined && object.req?.transcode !== null) {\n      message.req = {$case: 'transcode', transcode: TranscodeReq_Transcode.fromPartial(object.req.transcode)};\n    }\n    if (object.req?.$case === 'status' && object.req?.status !== undefined && object.req?.status !== null) {\n      message.req = {$case: 'status', status: Empty.fromPartial(object.req.status)};\n    }\n    if (object.req?.$case === 'cancel' && object.req?.cancel !== undefined && object.req?.cancel !== null) {\n      message.req = {$case: 'cancel', cancel: Empty.fromPartial(object.req.cancel)};\n    }\n    return message;\n  },\n  toJSON(message: TranscodeReq): unknown {\n    const obj: any = {};\n    message.req?.$case === 'handshake' && (obj.handshake = message.req?.handshake ? TranscodeReq_Handshake.toJSON(message.req?.handshake) : undefined);\n    message.req?.$case === 'transcode' && (obj.transcode = message.req?.transcode ? TranscodeReq_Transcode.toJSON(message.req?.transcode) : undefined);\n    message.req?.$case === 'status' && (obj.status = message.req?.status ? Empty.toJSON(message.req?.status) : undefined);\n    message.req?.$case === 'cancel' && (obj.cancel = message.req?.cancel ? Empty.toJSON(message.req?.cancel) : undefined);\n    return obj;\n  },\n};\n\nexport const TranscodeReq_Transcode = {\n  encode(message: TranscodeReq_Transcode, writer: Writer = Writer.create()): Writer {\n    writer.uint32(10).string(message.url);\n    return writer;\n  },\n  decode(input: Uint8Array | Reader, length?: number): TranscodeReq_Transcode {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseTranscodeReq_Transcode } as TranscodeReq_Transcode;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.url = reader.string();\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object: any): TranscodeReq_Transcode {\n    const message = { ...baseTranscodeReq_Transcode } as TranscodeReq_Transcode;\n    if (object.url !== undefined && object.url !== null) {\n      message.url = String(object.url);\n    }\n    return message;\n  },\n  fromPartial(object: DeepPartial<TranscodeReq_Transcode>): TranscodeReq_Transcode {\n    const message = { ...baseTranscodeReq_Transcode } as TranscodeReq_Transcode;\n    if (object.url !== undefined && object.url !== null) {\n      message.url = object.url;\n    }\n    return message;\n  },\n  toJSON(message: TranscodeReq_Transcode): unknown {\n    const obj: any = {};\n    message.url !== undefined && (obj.url = message.url);\n    return obj;\n  },\n};\n\nexport const TranscodeReq_Handshake = {\n  encode(message: TranscodeReq_Handshake, writer: Writer = Writer.create()): Writer {\n    if (message.token !== undefined && message.token !== undefined) {\n      Token.encode(message.token, writer.uint32(10).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input: Uint8Array | Reader, length?: number): TranscodeReq_Handshake {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseTranscodeReq_Handshake } as TranscodeReq_Handshake;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.token = Token.decode(reader, reader.uint32());\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object: any): TranscodeReq_Handshake {\n    const message = { ...baseTranscodeReq_Handshake } as TranscodeReq_Handshake;\n    if (object.token !== undefined && object.token !== null) {\n      message.token = Token.fromJSON(object.token);\n    }\n    return message;\n  },\n  fromPartial(object: DeepPartial<TranscodeReq_Handshake>): TranscodeReq_Handshake {\n    const message = { ...baseTranscodeReq_Handshake } as TranscodeReq_Handshake;\n    if (object.token !== undefined && object.token !== null) {\n      message.token = Token.fromPartial(object.token);\n    }\n    return message;\n  },\n  toJSON(message: TranscodeReq_Handshake): unknown {\n    const obj: any = {};\n    message.token !== undefined && (obj.token = message.token ? Token.toJSON(message.token) : undefined);\n    return obj;\n  },\n};\n\nexport const TranscodeResp = {\n  encode(message: TranscodeResp, writer: Writer = Writer.create()): Writer {\n    if (message.resp?.$case === 'error') {\n      writer.uint32(10).string(message.resp.error);\n    }\n    if (message.resp?.$case === 'accepted') {\n      Result.encode(message.resp.accepted, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.resp?.$case === 'jobStatus') {\n      TranscodeResp_JobStatus.encode(message.resp.jobStatus, writer.uint32(26).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input: Uint8Array | Reader, length?: number): TranscodeResp {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseTranscodeResp } as TranscodeResp;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.resp = {$case: 'error', error: reader.string()};\n          break;\n        case 2:\n          message.resp = {$case: 'accepted', accepted: Result.decode(reader, reader.uint32())};\n          break;\n        case 3:\n          message.resp = {$case: 'jobStatus', jobStatus: TranscodeResp_JobStatus.decode(reader, reader.uint32())};\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object: any): TranscodeResp {\n    const message = { ...baseTranscodeResp } as TranscodeResp;\n    if (object.error !== undefined && object.error !== null) {\n      message.resp = {$case: 'error', error: String(object.error)};\n    }\n    if (object.accepted !== undefined && object.accepted !== null) {\n      message.resp = {$case: 'accepted', accepted: Result.fromJSON(object.accepted)};\n    }\n    if (object.jobStatus !== undefined && object.jobStatus !== null) {\n      message.resp = {$case: 'jobStatus', jobStatus: TranscodeResp_JobStatus.fromJSON(object.jobStatus)};\n    }\n    return message;\n  },\n  fromPartial(object: DeepPartial<TranscodeResp>): TranscodeResp {\n    const message = { ...baseTranscodeResp } as TranscodeResp;\n    if (object.resp?.$case === 'error' && object.resp?.error !== undefined && object.resp?.error !== null) {\n      message.resp = {$case: 'error', error: object.resp.error};\n    }\n    if (object.resp?.$case === 'accepted' && object.resp?.accepted !== undefined && object.resp?.accepted !== null) {\n      message.resp = {$case: 'accepted', accepted: Result.fromPartial(object.resp.accepted)};\n    }\n    if (object.resp?.$case === 'jobStatus' && object.resp?.jobStatus !== undefined && object.resp?.jobStatus !== null) {\n      message.resp = {$case: 'jobStatus', jobStatus: TranscodeResp_JobStatus.fromPartial(object.resp.jobStatus)};\n    }\n    return message;\n  },\n  toJSON(message: TranscodeResp): unknown {\n    const obj: any = {};\n    message.resp?.$case === 'error' && (obj.error = message.resp?.error);\n    message.resp?.$case === 'accepted' && (obj.accepted = message.resp?.accepted ? Result.toJSON(message.resp?.accepted) : undefined);\n    message.resp?.$case === 'jobStatus' && (obj.jobStatus = message.resp?.jobStatus ? TranscodeResp_JobStatus.toJSON(message.resp?.jobStatus) : undefined);\n    return obj;\n  },\n};\n\nexport const TranscodeResp_JobStatus = {\n  encode(message: TranscodeResp_JobStatus, writer: Writer = Writer.create()): Writer {\n    if (message.state?.$case === 'unknown') {\n      Empty.encode(message.state.unknown, writer.uint32(10).fork()).ldelim();\n    }\n    if (message.state?.$case === 'noJobs') {\n      Empty.encode(message.state.noJobs, writer.uint32(18).fork()).ldelim();\n    }\n    if (message.state?.$case === 'queued') {\n      Empty.encode(message.state.queued, writer.uint32(26).fork()).ldelim();\n    }\n    if (message.state?.$case === 'processing') {\n      Empty.encode(message.state.processing, writer.uint32(34).fork()).ldelim();\n    }\n    if (message.state?.$case === 'uploading') {\n      Empty.encode(message.state.uploading, writer.uint32(42).fork()).ldelim();\n    }\n    if (message.state?.$case === 'completed') {\n      Result.encode(message.state.completed, writer.uint32(50).fork()).ldelim();\n    }\n    if (message.state?.$case === 'cancelled') {\n      Empty.encode(message.state.cancelled, writer.uint32(58).fork()).ldelim();\n    }\n    return writer;\n  },\n  decode(input: Uint8Array | Reader, length?: number): TranscodeResp_JobStatus {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseTranscodeResp_JobStatus } as TranscodeResp_JobStatus;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.state = {$case: 'unknown', unknown: Empty.decode(reader, reader.uint32())};\n          break;\n        case 2:\n          message.state = {$case: 'noJobs', noJobs: Empty.decode(reader, reader.uint32())};\n          break;\n        case 3:\n          message.state = {$case: 'queued', queued: Empty.decode(reader, reader.uint32())};\n          break;\n        case 4:\n          message.state = {$case: 'processing', processing: Empty.decode(reader, reader.uint32())};\n          break;\n        case 5:\n          message.state = {$case: 'uploading', uploading: Empty.decode(reader, reader.uint32())};\n          break;\n        case 6:\n          message.state = {$case: 'completed', completed: Result.decode(reader, reader.uint32())};\n          break;\n        case 7:\n          message.state = {$case: 'cancelled', cancelled: Empty.decode(reader, reader.uint32())};\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object: any): TranscodeResp_JobStatus {\n    const message = { ...baseTranscodeResp_JobStatus } as TranscodeResp_JobStatus;\n    if (object.unknown !== undefined && object.unknown !== null) {\n      message.state = {$case: 'unknown', unknown: Empty.fromJSON(object.unknown)};\n    }\n    if (object.noJobs !== undefined && object.noJobs !== null) {\n      message.state = {$case: 'noJobs', noJobs: Empty.fromJSON(object.noJobs)};\n    }\n    if (object.queued !== undefined && object.queued !== null) {\n      message.state = {$case: 'queued', queued: Empty.fromJSON(object.queued)};\n    }\n    if (object.processing !== undefined && object.processing !== null) {\n      message.state = {$case: 'processing', processing: Empty.fromJSON(object.processing)};\n    }\n    if (object.uploading !== undefined && object.uploading !== null) {\n      message.state = {$case: 'uploading', uploading: Empty.fromJSON(object.uploading)};\n    }\n    if (object.completed !== undefined && object.completed !== null) {\n      message.state = {$case: 'completed', completed: Result.fromJSON(object.completed)};\n    }\n    if (object.cancelled !== undefined && object.cancelled !== null) {\n      message.state = {$case: 'cancelled', cancelled: Empty.fromJSON(object.cancelled)};\n    }\n    return message;\n  },\n  fromPartial(object: DeepPartial<TranscodeResp_JobStatus>): TranscodeResp_JobStatus {\n    const message = { ...baseTranscodeResp_JobStatus } as TranscodeResp_JobStatus;\n    if (object.state?.$case === 'unknown' && object.state?.unknown !== undefined && object.state?.unknown !== null) {\n      message.state = {$case: 'unknown', unknown: Empty.fromPartial(object.state.unknown)};\n    }\n    if (object.state?.$case === 'noJobs' && object.state?.noJobs !== undefined && object.state?.noJobs !== null) {\n      message.state = {$case: 'noJobs', noJobs: Empty.fromPartial(object.state.noJobs)};\n    }\n    if (object.state?.$case === 'queued' && object.state?.queued !== undefined && object.state?.queued !== null) {\n      message.state = {$case: 'queued', queued: Empty.fromPartial(object.state.queued)};\n    }\n    if (object.state?.$case === 'processing' && object.state?.processing !== undefined && object.state?.processing !== null) {\n      message.state = {$case: 'processing', processing: Empty.fromPartial(object.state.processing)};\n    }\n    if (object.state?.$case === 'uploading' && object.state?.uploading !== undefined && object.state?.uploading !== null) {\n      message.state = {$case: 'uploading', uploading: Empty.fromPartial(object.state.uploading)};\n    }\n    if (object.state?.$case === 'completed' && object.state?.completed !== undefined && object.state?.completed !== null) {\n      message.state = {$case: 'completed', completed: Result.fromPartial(object.state.completed)};\n    }\n    if (object.state?.$case === 'cancelled' && object.state?.cancelled !== undefined && object.state?.cancelled !== null) {\n      message.state = {$case: 'cancelled', cancelled: Empty.fromPartial(object.state.cancelled)};\n    }\n    return message;\n  },\n  toJSON(message: TranscodeResp_JobStatus): unknown {\n    const obj: any = {};\n    message.state?.$case === 'unknown' && (obj.unknown = message.state?.unknown ? Empty.toJSON(message.state?.unknown) : undefined);\n    message.state?.$case === 'noJobs' && (obj.noJobs = message.state?.noJobs ? Empty.toJSON(message.state?.noJobs) : undefined);\n    message.state?.$case === 'queued' && (obj.queued = message.state?.queued ? Empty.toJSON(message.state?.queued) : undefined);\n    message.state?.$case === 'processing' && (obj.processing = message.state?.processing ? Empty.toJSON(message.state?.processing) : undefined);\n    message.state?.$case === 'uploading' && (obj.uploading = message.state?.uploading ? Empty.toJSON(message.state?.uploading) : undefined);\n    message.state?.$case === 'completed' && (obj.completed = message.state?.completed ? Result.toJSON(message.state?.completed) : undefined);\n    message.state?.$case === 'cancelled' && (obj.cancelled = message.state?.cancelled ? Empty.toJSON(message.state?.cancelled) : undefined);\n    return obj;\n  },\n};\n\nexport const Result = {\n  encode(message: Result, writer: Writer = Writer.create()): Writer {\n    if (message.resultInner?.$case === 'ok') {\n      writer.uint32(10).string(message.resultInner.ok);\n    }\n    if (message.resultInner?.$case === 'err') {\n      writer.uint32(18).string(message.resultInner.err);\n    }\n    return writer;\n  },\n  decode(input: Uint8Array | Reader, length?: number): Result {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseResult } as Result;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.resultInner = {$case: 'ok', ok: reader.string()};\n          break;\n        case 2:\n          message.resultInner = {$case: 'err', err: reader.string()};\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object: any): Result {\n    const message = { ...baseResult } as Result;\n    if (object.ok !== undefined && object.ok !== null) {\n      message.resultInner = {$case: 'ok', ok: String(object.ok)};\n    }\n    if (object.err !== undefined && object.err !== null) {\n      message.resultInner = {$case: 'err', err: String(object.err)};\n    }\n    return message;\n  },\n  fromPartial(object: DeepPartial<Result>): Result {\n    const message = { ...baseResult } as Result;\n    if (object.resultInner?.$case === 'ok' && object.resultInner?.ok !== undefined && object.resultInner?.ok !== null) {\n      message.resultInner = {$case: 'ok', ok: object.resultInner.ok};\n    }\n    if (object.resultInner?.$case === 'err' && object.resultInner?.err !== undefined && object.resultInner?.err !== null) {\n      message.resultInner = {$case: 'err', err: object.resultInner.err};\n    }\n    return message;\n  },\n  toJSON(message: Result): unknown {\n    const obj: any = {};\n    message.resultInner?.$case === 'ok' && (obj.ok = message.resultInner?.ok);\n    message.resultInner?.$case === 'err' && (obj.err = message.resultInner?.err);\n    return obj;\n  },\n};\n\nexport const Token = {\n  encode(message: Token, writer: Writer = Writer.create()): Writer {\n    if (message.token?.$case === 'v1') {\n      writer.uint32(10).bytes(message.token.v1);\n    }\n    return writer;\n  },\n  decode(input: Uint8Array | Reader, length?: number): Token {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseToken } as Token;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1:\n          message.token = {$case: 'v1', v1: reader.bytes()};\n          break;\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(object: any): Token {\n    const message = { ...baseToken } as Token;\n    if (object.v1 !== undefined && object.v1 !== null) {\n      message.token = {$case: 'v1', v1: bytesFromBase64(object.v1)};\n    }\n    return message;\n  },\n  fromPartial(object: DeepPartial<Token>): Token {\n    const message = { ...baseToken } as Token;\n    if (object.token?.$case === 'v1' && object.token?.v1 !== undefined && object.token?.v1 !== null) {\n      message.token = {$case: 'v1', v1: object.token.v1};\n    }\n    return message;\n  },\n  toJSON(message: Token): unknown {\n    const obj: any = {};\n    message.token?.$case === 'v1' && (obj.v1 = message.token?.v1 !== undefined ? base64FromBytes(message.token?.v1) : undefined);\n    return obj;\n  },\n};\n\ninterface WindowBase64 {\n  atob(b64: string): string;\n  btoa(bin: string): string;\n}\n\nconst windowBase64 = (globalThis as unknown as WindowBase64);\nconst atob = windowBase64.atob || ((b64: string) => Buffer.from(b64, 'base64').toString('binary'));\nconst btoa = windowBase64.btoa || ((bin: string) => Buffer.from(bin, 'binary').toString('base64'));\n\nfunction bytesFromBase64(b64: string): Uint8Array {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n  for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n  }\n  return arr;\n}\n\nfunction base64FromBytes(arr: Uint8Array): string {\n  const bin: string[] = [];\n  for (let i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n  return btoa(bin.join(''));\n}\ntype Builtin = Date | Function | Uint8Array | string | number | undefined;\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string }\n  ? { [K in keyof Omit<T, '$case'>]?: DeepPartial<T[K]> } & { $case: T['$case'] }\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\n\n\n/**\n *  A generic empty message that you can re-use to avoid defining duplicated\n *  empty messages in your APIs. A typical example is to use it as the request\n *  or the response type of an API method. For instance:\n *\n *      service Foo {\n *        rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n *      }\n *\n *  The JSON representation for `Empty` is empty JSON object `{}`.\n */\nexport interface Empty {\n}\n\nconst baseEmpty: object = {\n};\n\nexport const protobufPackage = 'google.protobuf'\n\nexport const Empty = {\n  encode(_: Empty, writer: Writer = Writer.create()): Writer {\n    return writer;\n  },\n  decode(input: Uint8Array | Reader, length?: number): Empty {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseEmpty } as Empty;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_: any): Empty {\n    const message = { ...baseEmpty } as Empty;\n    return message;\n  },\n  fromPartial(_: DeepPartial<Empty>): Empty {\n    const message = { ...baseEmpty } as Empty;\n    return message;\n  },\n  toJSON(_: Empty): unknown {\n    const obj: any = {};\n    return obj;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | undefined;\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends { $case: string }\n  ? { [K in keyof Omit<T, '$case'>]?: DeepPartial<T[K]> } & { $case: T['$case'] }\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;","import * as proto from './pb/main';\nimport { Empty } from './google/protobuf/empty';\nimport WebSocketAsPromised from 'websocket-as-promised';\nimport Channel from 'chnl';\n  import { listenerCount } from 'stream';\n\nexport type APIError<Values> = {\n  error?: string;\n} & Partial<Values>;\n\n\nexport const vredditID = (url: string): string | undefined => {\n  const res = /v\\.redd\\.it\\/([A-Za-z0-9]+)/.exec(url);\n\n  if (res?.length !== 2) {\n    return undefined;\n  }\n\n  return res[1];\n}\n\nexport const getVRedditFromComments = (url: string): Promise<string> => (\n  new Promise((resolve, reject) => (\n    // Thank you cors anywhere for this awesome hack.\n    fetch(`//cors-anywhere.herokuapp.com/${url}`)\n      .then((r) => r.text())\n      .then((text) => {\n        const res = /(https:\\/\\/v\\.redd\\.it\\/[A-Z0-9a-z]+)/.exec(text);\n\n        if (!res || res?.length < 2) {\n          reject(new Error('Failed to find v.redd.it url in link; is it a video?'));\n        } else {\n          resolve(res[1]);\n        }\n      })\n  ))\n);\n\nexport const getURLsFromMPD = (xml: string): string[] => {\n  const parser = new DOMParser();\n  const xmlDoc = parser.parseFromString(xml, 'text/xml');\n\n  return [].slice.call(\n    xmlDoc.getElementsByTagName('BaseURL')\n  ).map(({ nodeValue }) => nodeValue);\n};\n\nconst getVRedditFromUser = (url: string, statusCb: (status: string) => void): Promise<string> => (\n  new Promise((resolve, reject) => {\n    if (/v\\.redd\\.it\\/([A-Za-z0-9]+)/.test(url)) {\n      statusCb(\"Scanning reddit\");\n      resolve(url);\n    } else if (/(m|old)?\\.?reddit\\.com\\/r\\/.*?\\/comments/.test(url)) {\n      statusCb(\"Fetching thread\");\n      // comments link\n      getVRedditFromComments(url)\n        .then(resolve)\n        .catch(reject);\n    } else {\n      statusCb(\"Failed\");\n      reject(new Error('Couldn\\'t get a reddit link from that. Please email me@brod.es if this is a valid reddit link.'));\n    }\n  })\n);\n\nlet connection: VRWebSocket | null = null;\n\n// returns the existing connection if it's alive and valid, otherwise\n// connects\nconst openConnection = (addr: string) => (\n  new Promise<VRWebSocket>((resolve, reject) => {\n    if (connection !== null && connection.isOpened) {\n      resolve(connection);\n    }\n    connection = new VRWebSocket(addr);\n\n    const timeout = setTimeout(() => {\n      clearTimeout(timeout);\n      if (connection !== null && !connection.isOpened) {\n        console.log(\"timeout hit\");\n        console.dir(connection);\n        connection.close();\n        connection = null;\n        reject(\"timed out when attempting to connect\");\n      }\n    }, 5000);\n\n    return connection.open().then(() => {\n      clearTimeout(timeout);\n      resolve(connection!);\n    }, reject);\n  })\n);\n\nexport type HostedURLOpts = {\n  statusCallback: (status: string) => void;\n  authz?: string;\n  server?: string;\n};\n\nexport const getHostedURL = (\n  targetURL: string,\n  opts: HostedURLOpts = { statusCallback: () => {} },\n): Promise<string> => (\n  // get a connection\n  new Promise<VRWebSocket>((resolve, reject) => {\n    const { authz, server, statusCallback } = opts;\n    statusCallback(\"Connecting\");\n\n    if (server === undefined) {\n      reject('Convert server was missing but is required');\n    } else if (authz === undefined) {\n      reject('Authorization was missing but is required');\n    } else {\n      return openConnection(server).then(resolve, reject);\n    }\n  })\n  // handshake, don't if already authed\n).then((connection) => {\n  if (connection.authed) {\n    return connection;\n  }\n  opts.statusCallback(\"Checking permission\");\n  return connection\n    .sendRequest(NewRequest.handshake(opts.authz))\n    .then((resp) => {\n      if (resp.$case === \"accepted\") {\n        const accept = resp?.accepted;\n        if (accept?.resultInner?.$case === \"ok\") {\n          opts.statusCallback(\"Requesting\");\n          connection.authed = true;\n          return connection;\n        } else if (accept?.resultInner?.$case === \"err\") {\n          opts.statusCallback(\"Server declined\");\n          throw new Error(`server rejected handshake: ${accept?.resultInner?.err}`);\n        }\n      } else {\n        throw new Error(`unknown response from server after handshake: ${proto.TranscodeResp.toJSON({ resp })}`);\n      }\n      return connection;\n    });\n// download!\n}).then((connection) => wsStartDownload(connection, targetURL, opts));\n\nconst wsStartDownload = (connection: VRWebSocket, targetURL: string, opts: HostedURLOpts) => new Promise<string>((rawResolve, rawReject) => {\n  const { statusCallback } = opts;\n\n  let gotStatus = false; // debounce\n  let done = false;\n  const resolve = (s: string) => {\n    done = true;\n    rawResolve(s);\n  };\n  const reject = (s: string) => {\n    if (connection !== null && !done) {\n      done = true;\n    }\n    rawReject(s);\n  };\n\n  const listen = (data: Body) => {\n    if (done) {\n      connection.onMessage.removeListener(listen);\n    }\n    console.log(`incoming message`, data);\n\n    parseResponse(data).then((resp) => {\n      console.log(`server message: ${resp}`);\n      if (resp.$case !== \"jobStatus\") {\n        statusCallback(\"Server communication failure\");\n        return reject(`unexpected message type, expected state: ${data}`);\n      }\n      const { state } = resp.jobStatus;\n\n      if (!state) {\n        statusCallback(\"Server communication failure\");\n        return reject(`unexpected message type, expected state: ${data}`);\n      }\n      const stateTy = state?.$case;\n\n      if (stateTy === \"queued\") {\n        statusCallback(\"Queueing\");\n        console.log(\"file queued\");\n      } else if (state?.$case === \"completed\") {\n        const inner = state?.completed?.resultInner;\n        switch (inner?.$case) {\n          case \"ok\":\n            console.log(`file COMPLETE: ${JSON.stringify(inner)}`);\n            statusCallback(\"Completed\");\n            return resolve(inner.ok);\n          case \"err\":\n            statusCallback(\"Errored\");\n            console.log(`file failed: ${JSON.stringify(inner)}`);\n            return reject(inner.err);\n          default:\n            return reject(`unknown result state for completed file from server: ${inner}`);\n        }\n      } else if (stateTy === \"processing\") {\n        statusCallback(\"Processing\");\n        console.log(\"file PROCESSING\");\n      } else if (stateTy === \"cancelled\") {\n        statusCallback(\"Cancelled\");\n        console.log(\"file cancelled\");\n        return reject(\"operation was cancelled\");\n      } else if (stateTy === \"uploading\") {\n        statusCallback(\"Uploading\");\n        console.log(\"file UPLOADING\");\n      } else if (stateTy === \"noJobs\") {\n        statusCallback(\"No jobs\");\n        console.log(\"no file queued\");\n      } else if (stateTy === \"unknown\") {\n        statusCallback(\"Unknown\");\n        console.log(\"unknown file state\");\n      } else {\n        statusCallback(\"Communication error\");\n        console.log(`unknown state message: ${state}`);\n      }\n\n      gotStatus = true;\n    }).catch(reject)\n  };\n\n  if (connection === null) {\n    console.error(\"connection closed\");\n    statusCallback(\"Server hung up\");\n    return reject(\"connection was closed\");\n  }\n\n  connection.onMessage.addListener(listen);\n\n  connection.send(NewRequest.transcode(targetURL));\n\n  let statusFn = () => {\n    if (connection === null || done) {\n      return;\n    }\n\n    if (gotStatus) {\n      connection.send(NewRequest.status());\n    } else {\n      console.log(\"have not received status, debouncing\");\n    }\n\n    setTimeout(statusFn, 1000);\n  };\n\n  setTimeout(statusFn, 1000);\n\n  console.log(`started download for URL: ${targetURL}`);\n});\n\nexport type ScrapeURLOpts = {\n  statusCallback: (status: string) => void;\n  resolveOnFirst: boolean;\n};\n\n\nexport const scrapeRedditURLs = (url: string, opts: ScrapeURLOpts): Promise<string[]> => (\n  new Promise((resolve, reject) => (\n    getVRedditFromUser(url, opts.statusCallback).then((url) => {\n      let id = vredditID(url);\n\n      if (id === undefined) {\n        throw new Error('could not get id from vreddit url');\n      }\n\n      const qualities = [\n        '1080',\n        '720',\n        '480',\n        '360',\n        '96',\n      ];\n      const mp4Urls = qualities.map((quality) => ({ name: `${quality} mp4`, url: `https://v.redd.it/${id}/DASH_${quality}.mp4` }));\n      const urls = [\n        ...mp4Urls,\n        ...qualities.map((quality) => ({ name: `${quality} legacy`, url: `https://v.redd.it/${id}/DASH_${quality}`})),\n      ];\n\n      // dear lord, here we go. the stub video element we'll listen for events on to tell if the video is real.\n      const vid = document.createElement('video');\n      loadVideos(urls, [], vid, resolve, opts);\n    })\n    .catch((err) => reject(err))\n  ))\n);\n\ntype URL = {\n  url: string;\n  name: string;\n};\n\n// Recursively calls itself based on events from the past vid's loading. If it loads, we know\n// it's a good url, if it fails, we don't.\n//\n// If resolveOnFirst is true, we'll resolve on the first success with one URL. Otherwise,\n// we accumate URLs by walking all of urls before resolving.\nconst loadVideos = (urls: URL[], valid: string[], vid: HTMLVideoElement, resolve: (_: string[]) => void, opts: ScrapeURLOpts) => {\n  const [{ url, name }, ...rem] = urls;\n  const once = { once: '' };\n  opts.statusCallback(`Checking ${name}`);\n\n  const meta = (_e: Event) => {\n    remove();\n    clearVideo();\n\n    const newURLs = [...valid, url];\n\n    if (rem.length === 0 || opts.resolveOnFirst) {\n      return resolve(newURLs);\n    }\n\n    setTimeout(() => {\n      loadVideos(rem, newURLs, vid, resolve, opts);\n    }, 500);\n  };\n\n  const fail = (e: Event) => {\n    remove();\n    once.once = e.type;\n    clearVideo();\n\n    if (rem.length === 0) {\n      return resolve(valid);\n    }\n\n    setTimeout(() => {\n      // debounce since abort could fire with error.\n      if (once.once !== e.type) {\n        return;\n      }\n\n      loadVideos(rem, valid, vid, resolve, opts);\n    }, 500);\n  };\n\n  const types: { [s: string]: (e: Event) => void } = {\n    'abort': fail,\n    'error': fail,\n    'loadedmetadata': meta,\n  };\n\n  const remove = () => (\n    Object.keys(types).map((t) => (\n      vid.removeEventListener(t, types[t])\n    ))\n  );\n\n  const clearVideo = () => {\n    // TypesScript doesn't allow src to be empty, even though\n    // it's perfectly fine and stops the video from loading.\n    (vid as any).src = undefined;\n  };\n\n  Object.keys(types).map((t) => (\n    vid.addEventListener(t, types[t])\n  ));\n\n  vid.src = url;\n};\n\ntype AlwaysProtoResp = Exclude<proto.TranscodeResp['resp'], undefined>;\n\nconst parseResponse = (data: Body): Promise<AlwaysProtoResp> => new Promise((resolve, reject) => (\n  data.arrayBuffer().then((data: ArrayBuffer) => {\n    const { resp } = proto.TranscodeResp.decode(new Uint8Array(data));\n    console.log(\"message received from server\");\n    console.dir(resp);\n\n    if (resp === undefined) {\n      throw Error(\"server returned an incomplete response\");\n    } else if (resp.$case === \"error\") {\n      throw Error(\"server errored: \" + resp.error);\n    }\n\n    return resolve(resp);\n  }).catch(reject)\n));\n\n\nclass VRWebSocket {\n  private inner: WebSocketAsPromised;\n  constructor(addr: string) {\n    this.inner = new WebSocketAsPromised(addr);\n\n    this.onClose = this.inner.onClose;\n    this.onClose.addListener((v) => {\n      this.authed = false;\n      console.error(`websocket closed`);\n      console.dir(v);\n    });\n    this.onError = this.inner.onError;\n    this.onError.addListener((v) => {\n      console.error(`websocket errored`);\n      console.dir(v);\n    });\n    this.onResponse = this.inner.onResponse;\n    this.onMessage = this.inner.onMessage;\n  }\n\n  public onClose: Channel;\n  public onError: Channel;\n  public onResponse: Channel;\n  public onMessage: Channel;\n  private isAuthed: boolean = false;\n\n  public get isOpened(): boolean {\n    return this.inner.isOpened;\n  }\n\n  public get isOpening(): boolean {\n    return this.inner.isOpening;\n  }\n\n  public get authed(): boolean {\n    return this.isAuthed;\n  }\n\n  public set authed(value) {\n    this.isAuthed = value;\n  }\n\n  public open(): Promise<Event> {\n    return this.inner.open()\n  }\n\n  public close(_code?: string, _reason?: string): Promise<Event> {\n    console.log(\"closing connection\");\n    this.authed = false;\n    return this.inner.close()\n  }\n\n  public send(data: proto.TranscodeReq) {\n    console.log(\"sending data\", data);\n    this.inner.send(proto.TranscodeReq.encode(data).finish())\n  }\n\n  public async sendRequest(data: proto.TranscodeReq): Promise<AlwaysProtoResp> {\n    // this.inner.sendRequest expects JSON RPCs. It ties together the response to the\n    // request with a injected requestID which we'll eagerly simulate with our non-parallel\n    // stream.\n\n    // XXX: this will break when the server begins to send responses that aren't 1:1 with requests.\n    const ret = new Promise<AlwaysProtoResp>((resolve, reject) => {\n      this.onMessage.addOnceListener((data) => {\n        console.log(\"presumptive response to request\", data);\n        console.dir(data);\n        parseResponse(data).then(resolve, reject)\n      });\n    });\n\n    this.send(data);\n\n    return ret;\n  }\n}\n\nconst NewRequest = {\n  transcode: (url: string): proto.TranscodeReq => ({ req: { $case: 'transcode', transcode: { url } } }),\n  handshake: (authz?: string): proto.TranscodeReq => ({ req: { $case: 'handshake', handshake: {\n    token: authz === undefined ? undefined : ({ token: { $case: 'v1', v1: Buffer.from(authz, 'base64') }})\n  }}}),\n  status: (): proto.TranscodeReq => ({ req: { $case: 'status', status: Empty } }),\n};\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { FieldRenderProps } from 'react-final-form';\n\nexport default ({\n  input,\n  meta,\n  ...extraProps\n}: FieldRenderProps<string>) => {\n  const error = meta.error || meta.submitError;\n  const showError = meta.invalid && !meta.dirtySinceLastSubmit && meta.touched && !meta.active;\n  const { type, ...remInput } = input;\n\n  return (\n    <>\n      <Form.Check\n        isInvalid={showError}\n        type=\"checkbox\"\n        {...remInput}\n        {...extraProps}\n        checked={!!remInput.value}\n      />\n      {\n        showError && (\n          <Form.Control.Feedback type=\"invalid\">\n            { error }\n          </Form.Control.Feedback>\n        )\n      }\n    </>\n  );\n};\n","import React from 'react';\nimport { Field } from 'react-final-form';\n\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport { Cookies } from 'react-cookie';\n\nimport FormCheck from './FormCheck';\nimport FinalFormControl from './FinalFormControl';\nimport * as util from './util';\n\nexport const YoutubeDLOptions = () => (\n  <>\n    <Form.Group as={Col} md=\"12\" lg=\"8\">\n      <Form.Label>Authorization Key</Form.Label>\n      <Field\n        component={FinalFormControl}\n        label=\"Authorization Key\"\n        name=\"authz\"\n        type=\"password\"\n        required={true}\n        placeholder=\"Special key provided by the server owner.\"\n      />\n    </Form.Group>\n    <Form.Group as={Col} md=\"12\" lg=\"8\">\n      <Form.Label>Server</Form.Label>\n      <Field\n        component={FinalFormControl}\n        label=\"Server\"\n        name=\"server\"\n        type=\"text\"\n        required={true}\n        placeholder={\"api.example.com\"}\n        initialValue={util.ifLocal(\"localhost:8080\")}\n      />\n    </Form.Group>\n  </>\n);\n\nexport const ScrapeOptions = () => (\n  <>\n    <Form.Group as={Col} md=\"12\" lg=\"8\">\n      <Field\n        name=\"resolveOnFirst\"\n        label=\"Return only the highest quality video found.\"\n        component={FormCheck}\n      />\n    </Form.Group>\n  </>\n);\n","import React, { useState } from 'react';\nimport { Form as FinalForm, Field, FormRenderProps } from 'react-final-form';\nimport { FORM_ERROR } from 'final-form';\nimport { Cookies, useCookies, withCookies } from 'react-cookie';\n\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\n\nimport FinalFormControl from './FinalFormControl';\nimport FormSelect from './FormSelect';\nimport SpinButton from './SpinButton';\nimport { ScrapeOptions, YoutubeDLOptions } from './ExtraFormOptions';\nimport * as api from './api';\nimport * as util from './util';\n\ntype Values = {\n  url: string;\n  conversionMethod: \"scrape\" | \"youtubedl\";\n\n  // scraper options\n  resolveOnFirst?: boolean;\n\n  // server options\n  authz?: string;\n  server?: string;\n};\n\ntype ErrorValues<T> = { [P in keyof T]?: string } & { [FORM_ERROR]?: string };\n\nconst onSubmit = (statusCb: (status: string) => void, setURLs: (urls: string[]) => void) => ({ url, conversionMethod, server, ...options }: Values): Promise<ErrorValues<Values>> => (\n  new Promise((resolve, _reject) => {\n    // persist all options on success\n    let promise;\n\n    if (conversionMethod === \"youtubedl\") {\n      let correctProto;\n      if (!window.location.protocol || window.location.protocol === \"http:\") {\n        correctProto = \"ws:\";\n      } else {\n        correctProto = \"wss:\";\n      }\n\n      // resolve to a secure URL, allowing user overrides if present.\n      let resolvedURL = server;\n      try {\n        const serverURL = new URL(server!);\n        if (serverURL.protocol !== correctProto) {\n          serverURL.protocol = correctProto;\n        }\n\n        resolvedURL = serverURL.toString();\n      } catch(e) {\n        resolvedURL = `${correctProto}://${server}`;\n      }\n\n      promise = api.getHostedURL(url, {\n       statusCallback: statusCb,\n        ...options,\n        server: resolvedURL,\n      }).then((url: string) => {\n        setURLs([url]);\n        resolve({});\n      });\n    } else {\n      promise = api.scrapeRedditURLs(url, {\n        statusCallback: statusCb,\n        resolveOnFirst: options.resolveOnFirst || false,\n      })\n      .then((urls: string[]) => {\n        setURLs(urls);\n        resolve({});\n      })\n    }\n\n    return promise\n      .catch((error: Error | string) => {\n        console.error('error when returning promise');\n        console.dir(error);\n\n        resolve({\n          [FORM_ERROR]: (typeof error === \"string\") ? error : error.message,\n        });\n      });\n  })\n);\n\ntype URLProps = { status: string } & FormRenderProps<Values>;\n\nconst URLForm = ({\n  handleSubmit,\n  submitting,\n  pristine,\n  dirtySinceLastSubmit,\n  invalid,\n  error,\n  submitError,\n  submitErrors,\n  values,\n  status,\n}: URLProps ) => {\n  const formError = submitError || error;\n  const serverError = submitErrors !== undefined && submitErrors[FORM_ERROR] !== undefined;\n  // Allow server errors (submitError) to retry without changes.\n  const disabledFromUserError = !serverError && !dirtySinceLastSubmit;\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      { formError && <Alert variant=\"danger\">{`${formError}`}</Alert> }\n      <Row sm=\"12\" md=\"8\">\n        <Form.Group as={Col} md=\"4\">\n          <Form.Label>Conversion Method</Form.Label>\n          <Field\n            name=\"conversionMethod\"\n            component={FormSelect}\n            type=\"select\"\n          >\n            <option value=\"scrape\">Scrape Reddit</option>\n            <option value=\"youtubedl\">youtube-dl (private)</option>\n          </Field>\n        </Form.Group>\n      </Row>\n      <Row sm=\"12\" md=\"8\">\n        <Form.Group as={Col} md=\"12\" lg=\"8\">\n          <Form.Label>URL</Form.Label>\n          <Field\n            component={FinalFormControl}\n            name=\"url\"\n            type=\"text\"\n            placeholder=\"https://v.redd.it/asdf1234\"\n          />\n          <HelpText conversionMethod={values.conversionMethod} />\n        </Form.Group>\n      </Row>\n      {\n        values.conversionMethod !== undefined && (\n          <>\n            <h4>Additional Settings</h4>\n            <Row sm=\"12\" md=\"8\">\n              <Form.Group as={Col} md=\"12\" lg=\"8\">\n                {\n                  values.conversionMethod === \"youtubedl\" &&\n                    <YoutubeDLOptions />\n                }\n                {\n                  values.conversionMethod === \"scrape\" &&\n                    <ScrapeOptions />\n                }\n              </Form.Group>\n            </Row>\n          </>\n        )\n      }\n\n      <Row sm=\"12\" md=\"8\">\n        <Col md=\"8\">\n          <SpinButton\n            variant=\"primary\"\n            type=\"submit\"\n            message=\"Convert\"\n            loading={submitting}\n            loadingMessage={status ? `${status}...` : \"Starting...\"}\n            disabled={submitting || pristine || (invalid && disabledFromUserError)}\n          />\n        </Col>\n      </Row>\n        </Form>\n  );\n};\n\nconst validate = ({ url, conversionMethod, server, authz }: Values): ErrorValues<Values> => {\n  let errors: ErrorValues<Values> = {};\n  if (!url || url.length < 3) {\n    errors.url = 'A valid URL is required';\n  } else {\n    try {\n      new URL(url);\n    } catch (e) {\n      errors.url = 'This isn\\'t a valid URL. It should be in the format https://v.redd.it/asdf1234xyz';\n    }\n  }\n\n  if (conversionMethod === 'youtubedl') {\n    if (server === undefined) {\n      errors.server = 'A server address is required';\n    } else if (server.length < 5) {\n      errors.server = 'A valid server address is required';\n    }\n    if (authz === undefined) {\n      errors.authz = 'An authorization token required';\n    } else {\n      try {\n        Buffer.from(authz, 'base64');\n      } catch (e) {\n        errors.authz = 'This authorization token is malformed';\n      }\n    }\n  }\n\n  return errors;\n};\n\nconst decorators = [util.withCookiePersistence<Values>([\n  'conversionMethod',\n  'resolveOnFirst',\n  'authz',\n  'server',\n])];\n\nexport default withCookies(({ cookies, setURLs }: { cookies: Cookies, setURLs: (urls: string[]) => void }) => {\n  // surely there's a better spot for this\n  const [status, setStatus] = useState(\"\");\n  let defaults = {};\n\n  try {\n    defaults = cookies.get<string | undefined>('persist') || '{}';\n  } catch (e) {\n    console.log(\"error when getting a cookie\");\n    console.error(e);\n  }\n\n  return (\n    <FinalForm\n      onSubmit={onSubmit(setStatus, setURLs)}\n      validate={validate}\n      initialValues={defaults}\n      decorators={decorators}\n      render={(props: FormRenderProps<Values>) => <URLForm status={status} {...(props as any)} />}\n    />\n  )\n});\n\nconst HelpText = ({ conversionMethod }: { conversionMethod: \"scrape\" | \"youtubedl\" }) => {\n  if (conversionMethod === \"scrape\") {\n    return (\n      <Form.Text className=\"text-muted\">\n        Provide either a direct v.redd.it link or a link to a video's comments.\n      </Form.Text>\n    );\n  } else if (conversionMethod === \"youtubedl\") {\n    return (\n      <Form.Text className=\"text-muted\">\n        Video link to any &nbsp;\n        <a\n          href=\"https://github.com/ytdl-org/youtube-dl/blob/master/docs/supportedsites.md\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          youtube-dl supported site\n        </a>.\n      </Form.Text>\n    );\n  }\n\n  return null;\n}\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { FieldRenderProps } from 'react-final-form';\n\nexport default ({\n  input,\n  meta,\n  ...extraProps\n}: FieldRenderProps<string>) => {\n  const error = meta.error || meta.submitError;\n  const showError = meta.invalid && !meta.dirtySinceLastSubmit && meta.touched && !meta.active;\n  const { type, ...remInput } = input;\n\n  return (\n    <>\n      <Form.Control\n        isInvalid={showError}\n        as=\"select\"\n        {...remInput}\n        {...extraProps}\n      />\n      {\n        showError && (\n          <Form.Control.Feedback type=\"invalid\">\n            { error }\n          </Form.Control.Feedback>\n        )\n      }\n    </>\n  );\n};\n","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\n\ntype Props = {\n  loading: boolean;\n  loadingMessage: string;\n  message: string;\n  spinnerProps?: Partial<React.ComponentProps<typeof Spinner>>;\n} & React.ComponentProps<typeof Button>;\n\nexport default ({\n  loading,\n  loadingMessage,\n  message,\n  spinnerProps = {},\n  ...buttonProps\n}: Props) => (\n  <Button\n    {...buttonProps}\n  >\n    {\n      loading && (\n        <Spinner\n          size=\"sm\"\n          animation=\"border\"\n          role=\"status\"\n          aria-hidden=\"true\"\n          {...spinnerProps}\n        />\n      )\n    }\n    { loading ? loadingMessage : message }\n  </Button>\n);\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\n\n\n/**\n *  A generic empty message that you can re-use to avoid defining duplicated\n *  empty messages in your APIs. A typical example is to use it as the request\n *  or the response type of an API method. For instance:\n *\n *      service Foo {\n *        rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n *      }\n *\n *  The JSON representation for `Empty` is empty JSON object `{}`.\n */\nexport interface Empty {\n}\n\nconst baseEmpty: object = {\n};\n\nexport const protobufPackage = 'google.protobuf'\n\nexport const Empty = {\n  encode(_: Empty, writer: Writer = Writer.create()): Writer {\n    return writer;\n  },\n  decode(input: Uint8Array | Reader, length?: number): Empty {\n    const reader = input instanceof Uint8Array ? new Reader(input) : input;\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = { ...baseEmpty } as Empty;\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n    return message;\n  },\n  fromJSON(_: any): Empty {\n    const message = { ...baseEmpty } as Empty;\n    return message;\n  },\n  fromPartial(_: DeepPartial<Empty>): Empty {\n    const message = { ...baseEmpty } as Empty;\n    return message;\n  },\n  toJSON(_: Empty): unknown {\n    const obj: any = {};\n    return obj;\n  },\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | undefined;\nexport type DeepPartial<T> = T extends Builtin\n  ? T\n  : T extends Array<infer U>\n  ? Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U>\n  ? ReadonlyArray<DeepPartial<U>>\n  : T extends {}\n  ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;"],"sourceRoot":""}